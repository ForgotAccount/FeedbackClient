using MySql.Data.MySqlClient;
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace FeedbackClient
{
    internal class DAO
    {
        private static string mysqlconnstr = ConfigurationManager.AppSettings["connString"];

        //3.3->获取未分拣的电子标签、包装机、贴标机任务数据。参数为序号和任务类型，任务类型为1时查询的是1电子标签、2为包装机、3为贴标机数据          获取为工作数据           开始后
        public static List<Dictionary<string, object>> getPack(int type)
        {
            List<Dictionary<string, object>> resultList = new List<Dictionary<string, object>>();
            Dictionary<string, object> dic;
            MySqlConnection mysqlConn = new MySqlConnection(mysqlconnstr);
            MySqlCommand mysqlCmd = mysqlConn.CreateCommand();
            mysqlConn.Open();
            if (type == 1)
            {
                //mysqlCmd.CommandText = "SELECT m.sort_num, m.pack_num, m.order_id, d.product_name, d.need_num, m.customer_name, mp.max_pack, sp.sum_num, m.ROUTE_ID, m.ROUTE_NAME, m.ROUTE_SEQ, m.ORDER_NEEDNUM, pt.tag_id, tc.order_sort, m.CUSTOMER_CODE, d.state, m.DELIVER_SEQ, CASE WHEN tp.PRODUCT_TYPE IS NULL THEN '0' ELSE tp.PRODUCT_TYPE END PRODUCT_TYPE, tp.`LONG`, tp.WIDE, tp.HIGH, tc.line_num, tc.max_line_num FROM t_tag_task_m m LEFT JOIN t_tag_task_d d ON m.SORT_NUM = d.SORT_NUM AND m.PACK_NUM = d.PACK_NUM LEFT JOIN ( SELECT ORDER_ID, max(pack_num) max_pack FROM t_tag_task_m GROUP BY ORDER_ID ) mp ON mp.ORDER_ID = m.ORDER_ID LEFT JOIN ( SELECT SORT_NUM, SUM(NEED_NUM) sum_num FROM t_tag_task_d GROUP BY SORT_NUM ) sp ON sp.SORT_NUM = m.SORT_NUM LEFT JOIN t_product_tag pt ON pt.PRODUCT_ID = d.PRODUCT_ID LEFT JOIN ( SELECT t.route_id, t.order_id, t.order_sort, ROW_NUMBER () OVER ( PARTITION BY t.route_id ORDER BY t.order_sort ASC ) line_num, b.max_line_num FROM ( SELECT a.order_id, a.route_id, (@rowNum :=@rowNum + 1) AS order_sort FROM ( SELECT order_id, max(SORT_NUM) SORT_NUM, max(route_id) route_id FROM t_tag_task_m GROUP BY order_id ORDER BY SORT_NUM ASC ) a, (SELECT(@rowNum := 0)) b ORDER BY a.SORT_NUM ASC ) t LEFT JOIN ( SELECT tb.route_id, max(line_num) max_line_num FROM ( SELECT t.route_id, t.order_id, t.order_sort, ROW_NUMBER () OVER ( PARTITION BY t.route_id ORDER BY t.order_sort ASC ) line_num FROM ( SELECT a.order_id, a.route_id, (@rowNum :=@rowNum + 1) AS order_sort FROM ( SELECT order_id, max(SORT_NUM) SORT_NUM, max(route_id) route_id FROM t_tag_task_m GROUP BY order_id ORDER BY SORT_NUM ASC ) a, (SELECT(@rowNum := 0)) b ORDER BY a.SORT_NUM ASC ) t ) tb GROUP BY tb.route_id ) b ON t.route_id = b.route_id ) tc ON tc.order_id = m.ORDER_ID LEFT JOIN t_product tp ON tp.PRODUCT_ID = d.PRODUCT_ID WHERE d.state = '0' ORDER BY sort_num ASC, cast( tp.product_type AS UNSIGNED INTEGER ) DESC, d.product_id ASC";
                //tag_id---->tag_addr
                //mysqlCmd.CommandText = "SELECT m.sort_num, m.pack_num, m.order_id, d.product_name, d.need_num, m.customer_name, mp.max_pack, sp.sum_num, m.ROUTE_ID, m.ROUTE_NAME, m.ROUTE_SEQ, m.ORDER_NEEDNUM, pt.tag_id, tc.order_sort, m.CUSTOMER_CODE, d.state, m.DELIVER_SEQ, CASE WHEN tp.PRODUCT_TYPE IS NULL THEN '0' ELSE tp.PRODUCT_TYPE END PRODUCT_TYPE, tp.`LONG`, tp.WIDE, tp.HIGH, tc.line_num, tc.max_line_num FROM t_tag_task_m m LEFT JOIN t_tag_task_d d ON m.SORT_NUM = d.SORT_NUM AND m.PACK_NUM = d.PACK_NUM LEFT JOIN ( SELECT ORDER_ID, max(pack_num) max_pack FROM t_tag_task_m GROUP BY ORDER_ID ) mp ON mp.ORDER_ID = m.ORDER_ID LEFT JOIN ( SELECT SORT_NUM, SUM(NEED_NUM) sum_num FROM t_tag_task_d GROUP BY SORT_NUM ) sp ON sp.SORT_NUM = m.SORT_NUM LEFT JOIN t_product_tag pt ON pt.PRODUCT_ID = d.PRODUCT_ID LEFT JOIN ( SELECT t.route_id, t.order_id, t.order_sort, ROW_NUMBER () OVER ( PARTITION BY t.route_id ORDER BY t.order_sort ASC ) line_num, b.max_line_num FROM ( SELECT a.order_id, a.route_id, (@rowNum :=@rowNum + 1) AS order_sort FROM ( SELECT order_id, max(SORT_NUM) SORT_NUM, max(route_id) route_id FROM t_tag_task_m GROUP BY order_id ORDER BY SORT_NUM ASC ) a, (SELECT(@rowNum := 0)) b ORDER BY a.SORT_NUM ASC ) t LEFT JOIN ( SELECT tb.route_id, max(line_num) max_line_num FROM ( SELECT t.route_id, t.order_id, t.order_sort, ROW_NUMBER () OVER ( PARTITION BY t.route_id ORDER BY t.order_sort ASC ) line_num FROM ( SELECT a.order_id, a.route_id, (@rowNum :=@rowNum + 1) AS order_sort FROM ( SELECT order_id, max(SORT_NUM) SORT_NUM, max(route_id) route_id FROM t_tag_task_m GROUP BY order_id ORDER BY SORT_NUM ASC ) a, (SELECT(@rowNum := 0)) b ORDER BY a.SORT_NUM ASC ) t ) tb GROUP BY tb.route_id ) b ON t.route_id = b.route_id ) tc ON tc.order_id = m.ORDER_ID LEFT JOIN t_product tp ON tp.PRODUCT_ID = d.PRODUCT_ID  ORDER BY sort_num ASC, cast( tp.product_type AS UNSIGNED INTEGER ) DESC, d.product_id ASC";
                mysqlCmd.CommandText = "SELECT m.sort_num, m.pack_num, m.order_id, d.product_name, d.need_num, m.customer_name, mp.max_pack, sp.sum_num, m.ROUTE_ID, m.ROUTE_NAME, m.ROUTE_SEQ, m.ORDER_NEEDNUM, pt.TAG_ADDR AS tag_id, tc.order_sort, m.CUSTOMER_CODE, d.state, m.DELIVER_SEQ, CASE WHEN tp.PRODUCT_TYPE IS NULL THEN '0' ELSE tp.PRODUCT_TYPE END PRODUCT_TYPE, tp.`LONG`, tp.WIDE, tp.HIGH, tc.line_num, tc.max_line_num,d.PRODUCT_ID FROM t_tag_task_m m LEFT JOIN t_tag_task_d d ON m.SORT_NUM = d.SORT_NUM AND m.PACK_NUM = d.PACK_NUM LEFT JOIN ( SELECT ORDER_ID, max(pack_num) max_pack FROM t_tag_task_m GROUP BY ORDER_ID ) mp ON mp.ORDER_ID = m.ORDER_ID LEFT JOIN ( SELECT SORT_NUM, SUM(NEED_NUM) sum_num FROM t_tag_task_d GROUP BY SORT_NUM ) sp ON sp.SORT_NUM = m.SORT_NUM LEFT JOIN t_product_tag pt ON pt.PRODUCT_ID = d.PRODUCT_ID LEFT JOIN ( SELECT t.route_id, t.order_id, t.order_sort, ROW_NUMBER () OVER ( PARTITION BY t.route_id ORDER BY t.order_sort ASC ) line_num, b.max_line_num FROM ( SELECT a.order_id, a.route_id, (@rowNum :=@rowNum + 1) AS order_sort FROM ( SELECT order_id, max(SORT_NUM) SORT_NUM, max(route_id) route_id FROM t_tag_task_m GROUP BY order_id ORDER BY SORT_NUM ASC ) a, (SELECT(@rowNum := 0)) b ORDER BY a.SORT_NUM ASC ) t LEFT JOIN ( SELECT tb.route_id, max(line_num) max_line_num FROM ( SELECT t.route_id, t.order_id, t.order_sort, ROW_NUMBER () OVER ( PARTITION BY t.route_id ORDER BY t.order_sort ASC ) line_num FROM ( SELECT a.order_id, a.route_id, (@rowNum :=@rowNum + 1) AS order_sort FROM ( SELECT order_id, max(SORT_NUM) SORT_NUM, max(route_id) route_id FROM t_tag_task_m GROUP BY order_id ORDER BY SORT_NUM ASC ) a, (SELECT(@rowNum := 0)) b ORDER BY a.SORT_NUM ASC ) t ) tb GROUP BY tb.route_id ) b ON t.route_id = b.route_id ) tc ON tc.order_id = m.ORDER_ID LEFT JOIN t_product tp ON tp.PRODUCT_ID = d.PRODUCT_ID  ORDER BY sort_num ASC, cast( tp.product_type AS UNSIGNED INTEGER ) DESC, cast(pt.TAG_ADDR AS UNSIGNED INTEGER) ASC";
            }
            if (type == 2)
            {
                //mysqlCmd.CommandText = "SELECT m.sort_num, m.pack_num, m.order_id, d.product_name, d.need_num, m.customer_name, mp.max_pack, sp.sum_num, m.ROUTE_ID, m.ROUTE_NAME, m.ROUTE_SEQ, m.ORDER_NEEDNUM, pt.tag_id, tc.order_sort, m.CUSTOMER_CODE, d.state, m.DELIVER_SEQ, CASE WHEN tp.PRODUCT_TYPE IS NULL THEN '0' ELSE tp.PRODUCT_TYPE END PRODUCT_TYPE, tp.`LONG`, tp.WIDE, tp.HIGH, tc.line_num, tc.max_line_num FROM t_packer_m m LEFT JOIN t_packer_d d ON m.SORT_NUM = d.SORT_NUM AND m.PACK_NUM = d.PACK_NUM LEFT JOIN ( SELECT ORDER_ID, max(pack_num) max_pack FROM t_packer_m GROUP BY ORDER_ID ) mp ON mp.ORDER_ID = m.ORDER_ID LEFT JOIN ( SELECT SORT_NUM, SUM(NEED_NUM) sum_num FROM t_packer_d GROUP BY SORT_NUM ) sp ON sp.SORT_NUM = m.SORT_NUM LEFT JOIN t_product_tag pt ON pt.PRODUCT_ID = d.PRODUCT_ID LEFT JOIN ( SELECT t.route_id, t.order_id, t.order_sort, ROW_NUMBER () OVER ( PARTITION BY t.route_id ORDER BY t.order_sort ASC ) line_num, b.max_line_num FROM ( SELECT a.order_id, a.route_id, (@rowNum :=@rowNum + 1) AS order_sort FROM ( SELECT order_id, max(SORT_NUM) SORT_NUM, max(route_id) route_id FROM t_packer_m GROUP BY order_id ORDER BY SORT_NUM ASC ) a, (SELECT(@rowNum := 0)) b ORDER BY a.SORT_NUM ASC ) t LEFT JOIN ( SELECT tb.route_id, max(line_num) max_line_num FROM ( SELECT t.route_id, t.order_id, t.order_sort, ROW_NUMBER () OVER ( PARTITION BY t.route_id ORDER BY t.order_sort ASC ) line_num FROM ( SELECT a.order_id, a.route_id, (@rowNum :=@rowNum + 1) AS order_sort FROM ( SELECT order_id, max(SORT_NUM) SORT_NUM, max(route_id) route_id FROM t_packer_m GROUP BY order_id ORDER BY SORT_NUM ASC ) a, (SELECT(@rowNum := 0)) b ORDER BY a.SORT_NUM ASC ) t ) tb GROUP BY tb.route_id ) b ON t.route_id = b.route_id ) tc ON tc.order_id = m.ORDER_ID LEFT JOIN t_product tp ON tp.PRODUCT_ID = d.PRODUCT_ID WHERE d.state = '0' ORDER BY sort_num ASC, cast( tp.product_type AS UNSIGNED INTEGER ) DESC, d.product_id ASC";
                mysqlCmd.CommandText = "SELECT m.sort_num, m.pack_num, m.order_id, d.product_name, d.need_num, m.customer_name, mp.max_pack, sp.sum_num, m.ROUTE_ID, m.ROUTE_NAME, m.ROUTE_SEQ, m.ORDER_NEEDNUM, pt.tag_addr AS tag_id, tc.order_sort, m.CUSTOMER_CODE, d.state, m.DELIVER_SEQ, CASE WHEN tp.PRODUCT_TYPE IS NULL THEN '0' ELSE tp.PRODUCT_TYPE END PRODUCT_TYPE, tp.`LONG`, tp.WIDE, tp.HIGH, tc.line_num, tc.max_line_num FROM t_packer_m m LEFT JOIN t_packer_d d ON m.SORT_NUM = d.SORT_NUM AND m.PACK_NUM = d.PACK_NUM LEFT JOIN ( SELECT ORDER_ID, max(pack_num) max_pack FROM t_packer_m GROUP BY ORDER_ID ) mp ON mp.ORDER_ID = m.ORDER_ID LEFT JOIN ( SELECT SORT_NUM, SUM(NEED_NUM) sum_num FROM t_packer_d GROUP BY SORT_NUM ) sp ON sp.SORT_NUM = m.SORT_NUM LEFT JOIN t_product_tag pt ON pt.PRODUCT_ID = d.PRODUCT_ID LEFT JOIN ( SELECT t.route_id, t.order_id, t.order_sort, ROW_NUMBER () OVER ( PARTITION BY t.route_id ORDER BY t.order_sort ASC ) line_num, b.max_line_num FROM ( SELECT a.order_id, a.route_id, (@rowNum :=@rowNum + 1) AS order_sort FROM ( SELECT order_id, max(SORT_NUM) SORT_NUM, max(route_id) route_id FROM t_packer_m GROUP BY order_id ORDER BY SORT_NUM ASC ) a, (SELECT(@rowNum := 0)) b ORDER BY a.SORT_NUM ASC ) t LEFT JOIN ( SELECT tb.route_id, max(line_num) max_line_num FROM ( SELECT t.route_id, t.order_id, t.order_sort, ROW_NUMBER () OVER ( PARTITION BY t.route_id ORDER BY t.order_sort ASC ) line_num FROM ( SELECT a.order_id, a.route_id, (@rowNum :=@rowNum + 1) AS order_sort FROM ( SELECT order_id, max(SORT_NUM) SORT_NUM, max(route_id) route_id FROM t_packer_m GROUP BY order_id ORDER BY SORT_NUM ASC ) a, (SELECT(@rowNum := 0)) b ORDER BY a.SORT_NUM ASC ) t ) tb GROUP BY tb.route_id ) b ON t.route_id = b.route_id ) tc ON tc.order_id = m.ORDER_ID LEFT JOIN t_product tp ON tp.PRODUCT_ID = d.PRODUCT_ID  ORDER BY sort_num ASC, cast( tp.product_type AS UNSIGNED INTEGER ) DESC, d.product_id ASC";
            }
            if (type == 3)
            {
                //tag_id---->tag_addr
                //mysqlCmd.CommandText = "SELECT m.sort_num, m.pack_num, m.order_id, d.product_name, d.need_num, m.customer_name, mp.max_pack, sp.sum_num, m.ROUTE_ID, m.ROUTE_NAME, m.ROUTE_SEQ, m.ORDER_NEEDNUM, pt.tag_id, tc.order_sort, m.CUSTOMER_CODE, d.state, m.DELIVER_SEQ, CASE WHEN tp.PRODUCT_TYPE IS NULL THEN '0' ELSE tp.PRODUCT_TYPE END PRODUCT_TYPE, tp.`LONG`, tp.WIDE, tp.HIGH, tc.line_num, tc.max_line_num FROM t_label_m m LEFT JOIN t_label_d d ON m.SORT_NUM = d.SORT_NUM AND m.PACK_NUM = d.PACK_NUM LEFT JOIN ( SELECT ORDER_ID, max(pack_num) max_pack FROM t_label_m GROUP BY ORDER_ID ) mp ON mp.ORDER_ID = m.ORDER_ID LEFT JOIN ( SELECT SORT_NUM, SUM(NEED_NUM) sum_num FROM t_label_d GROUP BY SORT_NUM ) sp ON sp.SORT_NUM = m.SORT_NUM LEFT JOIN t_product_tag pt ON pt.PRODUCT_ID = d.PRODUCT_ID LEFT JOIN ( SELECT t.route_id, t.order_id, t.order_sort, ROW_NUMBER () OVER ( PARTITION BY t.route_id ORDER BY t.order_sort ASC ) line_num, b.max_line_num FROM ( SELECT a.order_id, a.route_id, (@rowNum :=@rowNum + 1) AS order_sort FROM ( SELECT order_id, max(SORT_NUM) SORT_NUM, max(route_id) route_id FROM t_label_m GROUP BY order_id ORDER BY SORT_NUM ASC ) a, (SELECT(@rowNum := 0)) b ORDER BY a.SORT_NUM ASC ) t LEFT JOIN ( SELECT tb.route_id, max(line_num) max_line_num FROM ( SELECT t.route_id, t.order_id, t.order_sort, ROW_NUMBER () OVER ( PARTITION BY t.route_id ORDER BY t.order_sort ASC ) line_num FROM ( SELECT a.order_id, a.route_id, (@rowNum :=@rowNum + 1) AS order_sort FROM ( SELECT order_id, max(SORT_NUM) SORT_NUM, max(route_id) route_id FROM t_label_m GROUP BY order_id ORDER BY SORT_NUM ASC ) a, (SELECT(@rowNum := 0)) b ORDER BY a.SORT_NUM ASC ) t ) tb GROUP BY tb.route_id ) b ON t.route_id = b.route_id ) tc ON tc.order_id = m.ORDER_ID LEFT JOIN t_product tp ON tp.PRODUCT_ID = d.PRODUCT_ID  ORDER BY sort_num ASC, cast( tp.product_type AS UNSIGNED INTEGER ) DESC, d.product_id ASC";
                mysqlCmd.CommandText = "SELECT m.sort_num, m.pack_num, m.order_id, d.product_name, d.need_num, m.customer_name, mp.max_pack, sp.sum_num, m.ROUTE_ID, m.ROUTE_NAME, m.ROUTE_SEQ, m.ORDER_NEEDNUM, pt.tag_addr AS tag_id, tc.order_sort, m.CUSTOMER_CODE, d.state, m.DELIVER_SEQ, CASE WHEN tp.PRODUCT_TYPE IS NULL THEN '0' ELSE tp.PRODUCT_TYPE END PRODUCT_TYPE, tp.`LONG`, tp.WIDE, tp.HIGH, tc.line_num, tc.max_line_num FROM t_label_m m LEFT JOIN t_label_d d ON m.SORT_NUM = d.SORT_NUM AND m.PACK_NUM = d.PACK_NUM LEFT JOIN ( SELECT ORDER_ID, max(pack_num) max_pack FROM t_label_m GROUP BY ORDER_ID ) mp ON mp.ORDER_ID = m.ORDER_ID LEFT JOIN ( SELECT SORT_NUM, SUM(NEED_NUM) sum_num FROM t_label_d GROUP BY SORT_NUM ) sp ON sp.SORT_NUM = m.SORT_NUM LEFT JOIN t_product_tag pt ON pt.PRODUCT_ID = d.PRODUCT_ID LEFT JOIN ( SELECT t.route_id, t.order_id, t.order_sort, ROW_NUMBER () OVER ( PARTITION BY t.route_id ORDER BY t.order_sort ASC ) line_num, b.max_line_num FROM ( SELECT a.order_id, a.route_id, (@rowNum :=@rowNum + 1) AS order_sort FROM ( SELECT order_id, max(SORT_NUM) SORT_NUM, max(route_id) route_id FROM t_label_m GROUP BY order_id ORDER BY SORT_NUM ASC ) a, (SELECT(@rowNum := 0)) b ORDER BY a.SORT_NUM ASC ) t LEFT JOIN ( SELECT tb.route_id, max(line_num) max_line_num FROM ( SELECT t.route_id, t.order_id, t.order_sort, ROW_NUMBER () OVER ( PARTITION BY t.route_id ORDER BY t.order_sort ASC ) line_num FROM ( SELECT a.order_id, a.route_id, (@rowNum :=@rowNum + 1) AS order_sort FROM ( SELECT order_id, max(SORT_NUM) SORT_NUM, max(route_id) route_id FROM t_label_m GROUP BY order_id ORDER BY SORT_NUM ASC ) a, (SELECT(@rowNum := 0)) b ORDER BY a.SORT_NUM ASC ) t ) tb GROUP BY tb.route_id ) b ON t.route_id = b.route_id ) tc ON tc.order_id = m.ORDER_ID LEFT JOIN t_product tp ON tp.PRODUCT_ID = d.PRODUCT_ID  ORDER BY sort_num ASC, cast( tp.product_type AS UNSIGNED INTEGER ) DESC, d.product_id ASC";
                //mysqlCmd.CommandText = "SELECT m.sort_num, m.pack_num, m.order_id, d.product_name, d.need_num, m.customer_name, mp.max_pack, sp.sum_num, m.ROUTE_ID, m.ROUTE_NAME, m.ROUTE_SEQ, m.ORDER_NEEDNUM, pt.tag_id, tc.order_sort, m.CUSTOMER_CODE, d.state, m.DELIVER_SEQ, CASE WHEN tp.PRODUCT_TYPE IS NULL THEN '0' ELSE tp.PRODUCT_TYPE END PRODUCT_TYPE, tp.`LONG`, tp.WIDE, tp.HIGH, tc.line_num, tc.max_line_num FROM t_label_m m LEFT JOIN t_label_d d ON m.SORT_NUM = d.SORT_NUM AND m.PACK_NUM = d.PACK_NUM LEFT JOIN ( SELECT ORDER_ID, max(pack_num) max_pack FROM t_label_m GROUP BY ORDER_ID ) mp ON mp.ORDER_ID = m.ORDER_ID LEFT JOIN ( SELECT SORT_NUM, SUM(NEED_NUM) sum_num FROM t_label_d GROUP BY SORT_NUM ) sp ON sp.SORT_NUM = m.SORT_NUM LEFT JOIN t_product_tag pt ON pt.PRODUCT_ID = d.PRODUCT_ID LEFT JOIN ( SELECT t.route_id, t.order_id, t.order_sort, ROW_NUMBER () OVER ( PARTITION BY t.route_id ORDER BY t.order_sort ASC ) line_num, b.max_line_num FROM ( SELECT a.order_id, a.route_id, (@rowNum :=@rowNum + 1) AS order_sort FROM ( SELECT order_id, max(SORT_NUM) SORT_NUM, max(route_id) route_id FROM t_label_m GROUP BY order_id ORDER BY SORT_NUM ASC ) a, (SELECT(@rowNum := 0)) b ORDER BY a.SORT_NUM ASC ) t LEFT JOIN ( SELECT tb.route_id, max(line_num) max_line_num FROM ( SELECT t.route_id, t.order_id, t.order_sort, ROW_NUMBER () OVER ( PARTITION BY t.route_id ORDER BY t.order_sort ASC ) line_num FROM ( SELECT a.order_id, a.route_id, (@rowNum :=@rowNum + 1) AS order_sort FROM ( SELECT order_id, max(SORT_NUM) SORT_NUM, max(route_id) route_id FROM t_label_m GROUP BY order_id ORDER BY SORT_NUM ASC ) a, (SELECT(@rowNum := 0)) b ORDER BY a.SORT_NUM ASC ) t ) tb GROUP BY tb.route_id ) b ON t.route_id = b.route_id ) tc ON tc.order_id = m.ORDER_ID LEFT JOIN t_product tp ON tp.PRODUCT_ID = d.PRODUCT_ID WHERE d.state = '0' ORDER BY sort_num ASC, cast( tp.product_type AS UNSIGNED INTEGER ) DESC, d.product_id ASC";
            }

            mysqlCmd.ExecuteNonQuery();
            MySqlDataReader reader = mysqlCmd.ExecuteReader();
            while (reader.Read())
            {
                dic = new Dictionary<string, object>();
                dic.Add("sort_num", reader.GetInt32(0)); //所有订单分包后顺序号
                dic.Add("pack_num", reader.GetString(1)); //相同订单当前包序号
                dic.Add("order_id", reader.GetString(2)); //订单id
                dic.Add("product_name", reader.GetString(3)); //卷烟名称
                dic.Add("need_num", reader.GetString(4));  //需要数量
                dic.Add("customer_name", reader.GetString(5)); //客户名称
                dic.Add("max_pack", reader.GetInt32(6).ToString()); //相同订单最大包数
                dic.Add("sum_num", reader.GetInt32(7).ToString()); //当前包需要的卷烟总数
                dic.Add("route_id", reader.GetString(8));  //线路编码
                dic.Add("route_name", reader.GetString(9)); //线路名称
                dic.Add("route_seq", reader.GetInt32(10).ToString()); //线路内的订单分拣顺序
                dic.Add("order_neednum", reader.GetInt32(11).ToString()); //订单需要的卷烟总数
                dic.Add("tag_id", reader.IsDBNull(12) ? "" : reader.GetInt32(12).ToString()); //电子标签码
                dic.Add("order_sort", reader.GetInt32(13).ToString()); //订单分包前序号
                dic.Add("customer_code", reader.GetString(14));//客户编码
                dic.Add("state", reader.GetString(15)); //状态
                dic.Add("deliver_seq", reader.GetString(16));//送货顺序
                dic.Add("product_type", reader.GetString(17));//卷烟类型
                dic.Add("long", reader.IsDBNull(18) ? "" : reader.GetInt32(18).ToString()); //长
                dic.Add("wide", reader.IsDBNull(19) ? "" : reader.GetInt32(19).ToString());//宽
                dic.Add("high", reader.IsDBNull(20) ? "" : reader.GetInt32(20).ToString());//高
                dic.Add("line_num", reader.IsDBNull(21) ? "" : reader.GetInt32(21).ToString());//当前线路号
                dic.Add("max_line_num", reader.IsDBNull(22) ? "" : reader.GetInt32(22).ToString());//当前线路最大号
                dic.Add("product_id",reader.IsDBNull(23)? "":reader.GetInt32(23).ToString());
                resultList.Add(dic);
            }
            mysqlConn.Close();
            return resultList;
        }
    }
}
